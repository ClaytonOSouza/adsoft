# Default values for vouch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: voucher/vouch-proxy
  tag: "0.9.4"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: ["/"]
  hosts:
    - oauth.myenvtest.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: 
    cpu: 200m
    memory: 256Mi
  requests: 
     cpu: 200m
     memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

# vouch config
# bare minimum to get vouch running with google

config:
  vouch:
    # domains -
    # each of these domains must serve the url https://vouch.$domains[0] https://vouch.$domains[1]
    # so that the cookie which stores the JWT can be set in the relevant domain
    # you usually *don't* want to list every individual website that will be protected
    # if you have siteA.internal.yourdomain.com and siteB.internal.yourdomain.com 
    # then your domains should be set as yourdomain.com or perhaps internal.yourdomain.com
    # usually you'll just have one.
    # Comment `domains:` out if you set allowAllUser:true
    domains:
      - myenvtest.com
    # set allowAllUsers: true to use Vouch Proxy to just accept anyone who can authenticate at the configured provider
    allowAllUsers: false
    # whiteList - (optional) allows only the listed usernames
    # usernames are usually email addresses (google, most oidc providers) or login/username for github and github enterprise
    whiteList: []
    # JWT
    # secret - a random string used to cryptographically sign the jwt
    # Vouch Proxy complains if the string is less than 44 characters (256 bits as 32 base64 bytes)
    # if the secret is not set here then..
    # look for the secret in `./config/secret`
    # if `./config/secret` doesn't exist then randomly generate a secret and store it there
    # in order to run multiple instances of vouch on multiple servers (perhaps purely for validating the jwt),
    # you'll want them all to have the same secret
    jwt:
      secret: super-secret-stuff
    webapp: false
    testing: false

  # OAuth Provider
  # configure ONLY ONE of the following oauth providers
  oauth:
    provider: google
    # create new credentials of OAuth client ID at
    # https://console.developers.google.com/apis/credentials
    # At section of OAuth consent screen choose User Type internal
    client_id: xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
    client_secret: xxxxxxxxxxxxxxxxxxxxxxxx
    callback_urls:
      - http://vouch.myenvtest.com:9090/auth
    preferredDomain: myenvtest.com
    # endpoints set from https://godoc.org/golang.org/x/oauth2/google